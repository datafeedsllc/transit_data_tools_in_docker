{"version":3,"sources":["index.js"],"names":["configureStore","process","env","NODE_ENV","require","createStore","reducers","configuredState","safeParse","STORE","locallyStoredState","window","localStorage","getItem","store","routing","str","JSON","parse","e"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAIA,cAAc,GAAG,IAArB;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,cAAc,GAAGI,OAAO,CAAC,oBAAD,CAAxB;AACD,CAFD,MAEO,IAAIH,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA7B,EAAqC;AAC1CH,EAAAA,cAAc,GAAGI,OAAO,CAAC,cAAD,CAAxB;AACD,CAFM,MAEA;AACLJ,EAAAA,cAAc,GAAGI,OAAO,CAAC,qBAAD,CAAxB;AACD;;AAEc,SAASC,WAAT,CAAsBC,QAAtB,EAAgC;AAC7C,MAAMC,eAAe,GAAGC,SAAS,CAACP,OAAO,CAACC,GAAR,CAAYO,KAAb,CAAjC;AACA,MAAMC,kBAAkB,GAAGF,SAAS,CAACG,MAAM,CAACC,YAAP,GAAsBD,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAtB,GAA6D,EAA9D,CAApC;AACA,MAAMC,KAAK,GAAGd,cAAc,CAC1B;AAAiBe,IAAAA,OAAO,EAAPA;AAAjB,KAA6BT,QAA7B,EAD0B,EAE1B,oBAAMC,eAAN,EAAuBG,kBAAvB,CAF0B,CAA5B;AAIA,SAAOI,KAAP;AACD;;AAED,SAASN,SAAT,CAAoBQ,GAApB,EAAyB;AACvB,MAAI;AACF,WAAOC,IAAI,CAACC,KAAL,CAAWF,GAAX,KAAmB,EAA1B;AACD,GAFD,CAEE,OAAOG,CAAP,EAAU;AACV,WAAO,EAAP;AACD;AACF","sourcesContent":["// @flow\nimport merge from 'lodash/merge'\nimport {combineReducers} from 'redux'\nimport {routerReducer as routing} from 'react-router-redux'\n\nlet configureStore = null\nif (process.env.NODE_ENV === 'production') {\n  configureStore = require('./store.production')\n} else if (process.env.NODE_ENV === 'test') {\n  configureStore = require('./store.mock')\n} else {\n  configureStore = require('./store.development')\n}\n\nexport default function createStore (reducers) {\n  const configuredState = safeParse(process.env.STORE)\n  const locallyStoredState = safeParse(window.localStorage ? window.localStorage.getItem('state') : {})\n  const store = configureStore(\n    combineReducers({routing, ...reducers}),\n    merge(configuredState, locallyStoredState)\n  )\n  return store\n}\n\nfunction safeParse (str) {\n  try {\n    return JSON.parse(str) || {}\n  } catch (e) {\n    return {}\n  }\n}\n"]}