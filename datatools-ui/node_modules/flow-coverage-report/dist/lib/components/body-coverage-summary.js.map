{"version":3,"sources":["../../../src/lib/components/body-coverage-summary.jsx"],"names":["module","exports","HTMLReportBodySummary","props","summary","coverageSummaryData","Error","filenames","Object","keys","files","sort","percent","filesSummaryTableProps","id","className","filesSummaryTable","map","fileSummary","filename","key","fileRowProps","isError","flowCoverageParsingError","flowCoverageError","flowCoverageException","flowCoverageStderr","covered_count","expressions","uncovered_count","meterBar","htmlTemplateOptions","showMeterBar","threshold"],"mappings":"AAAA;;;;;;AAIA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAIAA,OAAOC,OAAP,GAAiB,SAASC,qBAAT,CAA+BC,KAA/B,EAA+D;AAC9E,MAAMC,UAAUD,MAAME,mBAAtB;AACA,MAAI,CAACD,OAAL,EAAc;AACZ,UAAM,IAAIE,KAAJ,CAAU,wCAAV,CAAN;AACD;AACD,MAAMC,YAAYC,OAAOC,IAAP,CAAYL,QAAQM,KAApB,EAA2BC,IAA3B,EAAlB;AACA,MAAMC,UAAUR,QAAQQ,OAAxB;;AAEA,MAAMC,yBAAyB;AAC7BC,QAAI,OADyB;AAE7BC,eAAW;AAFkB,GAA/B;AAIA,MAAMC,oBACJ;AAAA;AAAWH,0BAAX;AACE,wEADF;AAEE;AAAA;AAAA;AAEEN,gBAAUU,GAAV,CAAc,oBAAY;AACxB,YAAMC,cAAcd,QAAQM,KAAR,CAAcS,QAAd,CAApB;AACA,YAAMC,MAAMD,QAAZ;AACA,YAAME,eAAe;AACnBF,oBAAUA,QADS;AAEnBG,mBAASJ,YAAYI,OAFF;AAGnBC,oCAA0BL,YAAYK,wBAHnB;AAInBC,6BAAmBN,YAAYM,iBAJZ;AAKnBC,iCAAuBP,YAAYO,qBALhB;AAMnBC,8BAAoBR,YAAYQ,kBANb;;AAQnBd,mBAASM,YAAYN,OARF;AASnB;AACAe,yBAAeT,YAAYU,WAAZ,CAAwBD,aAVpB;AAWnBE,2BAAiBX,YAAYU,WAAZ,CAAwBC;AACzC;AAZmB,SAArB;AAcA,eAAO,uFAA0B,KAAKT,GAA/B,IAAwCC,YAAxC,EAAP;AACD,OAlBD;AAFF;AAFF,GADF;;AA6BA,MAAIS,iBAAJ;;AAEA,MAAI3B,MAAM4B,mBAAN,IAA6B5B,MAAM4B,mBAAN,CAA0BC,YAA3D,EAAyE;AACvEF,eAAW,4DAAsB,SAASlB,OAA/B,EAAwC,WAAWT,MAAM8B,SAAzD,GAAX;AACD;;AAED,SACE;AAAA;AAAA;AACE;AAAA;AAAA,QAAK,WAAU,mBAAf;AACE;AAAA;AAAA,UAAK,WAAU,KAAf;AACE;AAAA;AAAA;AAAA;AAAA;AADF,OADF;AAIE;AAAA;AAAA,UAAK,WAAU,KAAf;AACE;AAAA;AAAA,YAAI,WAAU,WAAd;AAAA;AAAA,SADF;AAEE,sEAA8B9B,KAA9B;AAFF,OAJF;AASI2B,cATJ;AAWE;AAAA;AAAA,UAAK,WAAU,KAAf;AACE;AAAA;AAAA,YAAI,WAAU,WAAd;AAAA;AAAA,SADF;AAEGd;AAFH,OAXF;AAeE;AAAA;AAAA,UAAK,WAAU,cAAf;AACE,wDAAsBb,KAAtB;AADF;AAfF;AADF,GADF;AAuBD,CAtED","file":"body-coverage-summary.js","sourcesContent":["'use strict';\n\n// @flow\n\nimport React from 'react';\n\nimport HTMLReportFooter from './footer';\nimport FlowCoverageSummaryTable from './coverage-summary-table';\nimport FlowCoverageFileTableHead from './coverage-file-table-head';\nimport FlowCoverageFileTableRow from './coverage-file-table-row';\nimport FlowCoverageMeterBar from './coverage-meter-bar';\n\nimport type {FlowCoverageReportProps} from './html-report-page';\n\nmodule.exports = function HTMLReportBodySummary(props: FlowCoverageReportProps) {\n  const summary = props.coverageSummaryData;\n  if (!summary) {\n    throw new Error('Missing coverageSummaryData from props');\n  }\n  const filenames = Object.keys(summary.files).sort();\n  const percent = summary.percent;\n\n  const filesSummaryTableProps = {\n    id: 'files',\n    className: 'ui small celled table sortable'\n  };\n  const filesSummaryTable = (\n    <table {...filesSummaryTableProps}>\n      <FlowCoverageFileTableHead/>\n      <tbody>\n      {\n        filenames.map(filename => {\n          const fileSummary = summary.files[filename];\n          const key = filename;\n          const fileRowProps = {\n            filename: filename,\n            isError: fileSummary.isError,\n            flowCoverageParsingError: fileSummary.flowCoverageParsingError,\n            flowCoverageError: fileSummary.flowCoverageError,\n            flowCoverageException: fileSummary.flowCoverageException,\n            flowCoverageStderr: fileSummary.flowCoverageStderr,\n\n            percent: fileSummary.percent,\n            /* eslint-disable camelcase */\n            covered_count: fileSummary.expressions.covered_count,\n            uncovered_count: fileSummary.expressions.uncovered_count\n            /* eslint-enable camelcase */\n          };\n          return <FlowCoverageFileTableRow key={key} {...fileRowProps}/>;\n        })\n      }\n      </tbody>\n    </table>\n  );\n\n  let meterBar;\n\n  if (props.htmlTemplateOptions && props.htmlTemplateOptions.showMeterBar) {\n    meterBar = <FlowCoverageMeterBar percent={percent} threshold={props.threshold}/>;\n  }\n\n  return (\n    <body>\n      <div className=\"ui grid container\">\n        <div className=\"row\">\n          <h2>Flow Coverage Report</h2>\n        </div>\n        <div className=\"row\">\n          <h4 className=\"ui header\">Summary</h4>\n          <FlowCoverageSummaryTable {...props}/>\n        </div>\n        {\n          meterBar\n        }\n        <div className=\"row\">\n          <h4 className=\"ui header\">Files</h4>\n          {filesSummaryTable}\n        </div>\n        <div className=\"row centered\">\n          <HTMLReportFooter {...props}/>\n        </div>\n      </div>\n    </body>\n  );\n};\n"]}