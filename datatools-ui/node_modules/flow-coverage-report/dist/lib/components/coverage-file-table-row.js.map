{"version":3,"sources":["../../../src/lib/components/coverage-file-table-row.jsx"],"names":["LinkToSourceFileReport","props","filename","targetFilename","href","module","exports","FlowCoverageFileTableRow","covered_count","uncovered_count","percent","isError","disableLink","threshold","className","errorPopup","errorType","errorContent","flowCoverageError","flowCoverageParsingError","flowCoverageException","flowCoverageStderr"],"mappings":"AAAA;;AAIA;;;;;;AAEA,SAASA,sBAAT,CAAgCC,KAAhC,EAAiE;AAC/D,MAAMC,WAAWD,MAAME,cAAvB;AACA,MAAMC,wBAAsBF,QAAtB,UAAN;AACA,SAAO;AAAA;AAAA,MAAG,MAAME,IAAT;AAAgBF;AAAhB,GAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiB,SAASC,wBAAT,CACfN,KADe,EAOf;AACA;AADA,MAGEC,QAHF,GAMID,KANJ,CAGEC,QAHF;AAAA,MAIEM,aAJF,GAMIP,KANJ,CAIEO,aAJF;AAAA,MAIiBC,eAJjB,GAMIR,KANJ,CAIiBQ,eAJjB;AAAA,MAKEC,OALF,GAMIT,KANJ,CAKES,OALF;AAAA,MAKWC,OALX,GAMIV,KANJ,CAKWU,OALX;AAAA,MASEC,WATF,GAUIX,KAVJ,CASEW,WATF;AAAA,MASeC,SATf,GAUIZ,KAVJ,CASeY,SATf;;;AAYAD,gBAAcX,MAAMW,WAApB;AACAC,cAAYZ,MAAMY,SAAN,IAAmB,EAA/B;;AAEA,MAAIC,YAAYJ,WAAWG,SAAX,GAAuB,UAAvB,GAAoC,UAApD;;AAEA,MAAIE,mBAAJ;;AAEA,MAAIJ,OAAJ,EAAa;AACXG,gBAAY,OAAZ;AACA,QAAIE,kBAAJ;AACA,QAAIC,qBAAJ;;AAEA,QAAIhB,MAAMiB,iBAAV,EAA6B;AAC3BF,kBAAY,eAAZ;AACAC,qBAAe;AAAA;AAAA;AAAMhB,cAAMiB;AAAZ,OAAf;AACD;;AAED,QAAIjB,MAAMkB,wBAAV,EAAoC;AAClCH,kBAAY,cAAZ;AACAC,qBAAe;AAAA;AAAA;AAAMhB,cAAMkB;AAAZ,OAAf;AACD;;AAED,QAAIlB,MAAMmB,qBAAV,EAAiC;AAC/BJ,kBAAY,+BAAZ;AACAC,qBAAe;AAAA;AAAA;AAAMhB,cAAMmB;AAAZ,OAAf;AACD;;AAED,QAAInB,MAAMoB,kBAAV,EAA8B;AAC5BL,kBAAY,qBAAZ;AACAC,qBAAe;AAAA;AAAA;AAAMhB,cAAMoB;AAAZ,OAAf;AACD;;AAEDN,iBACE;AAAA;AAAA,QAAK,WAAU,UAAf;AACE;AAAA;AAAA,UAAK,WAAU,QAAf;AAAA;AAAqCC;AAArC,OADF;AAEE;AAAA;AAAA;AAAMC;AAAN;AAFF,KADF;AAMD;;AAED,SACE;AAAA;AAAA,MAAI,KAAKf,QAAT,EAAmB,WAAWY,SAA9B;AACE;AAAA;AAAA,QAAI,KAAI,UAAR,EAAmB,WAAWF,cAAc,EAAd,GAAmB,YAAjD;AACGA,oBAAcV,QAAd,GAAyB,8BAAC,sBAAD,IAAwB,gBAAgBA,QAAxC;AAD5B,KADF;AAIE;AAAA;AAAA,QAAI,KAAI,SAAR,EAAkB,WAAWS,WAAW,OAAxC;AAEIA,gBACE;AAAA;AAAA;AACE,6CAAG,WAAU,gBAAb,EAA8B,iBAAc,cAA5C,GADF;AAAA;AAGGI;AAHH,OADF,GAME;AAAA;AAAA;AAAOL,eAAP;AAAA;AAAA;AARN,KAJF;AAeE;AAAA;AAAA,QAAI,KAAI,OAAR;AAAA;AAAkBF,sBAAgBC,eAAlC;AAAA;AAAA,KAfF;AAgBE;AAAA;AAAA,QAAI,KAAI,SAAR;AAAA;AAAoBD,mBAApB;AAAA;AAAA,KAhBF;AAiBE;AAAA;AAAA,QAAI,KAAI,WAAR;AAAA;AAAsBC,qBAAtB;AAAA;AAAA;AAjBF,GADF;AAqBA;AACD,CAjFD","file":"coverage-file-table-row.js","sourcesContent":["'use strict';\n\n// @flow\n\nimport React from 'react';\n\nfunction LinkToSourceFileReport(props: {targetFilename: string}) {\n  const filename = props.targetFilename;\n  const href = `sourcefiles/${filename}.html`;\n  return <a href={href}>{filename}</a>;\n}\n\nmodule.exports = function FlowCoverageFileTableRow(\n  props: {\n    filename: string, covered_count: number, uncovered_count: number,\n    percent: number, disableLink?: boolean, threshold?: number,\n    isError: boolean, flowCoverageError?: ?string, flowCoverageParsingError?: ?string,\n    flowCoverageException?: ?string, flowCoverageStderr?: ?string|?Buffer,\n  }\n) {\n  /* eslint-disable camelcase */\n  const {\n    filename,\n    covered_count, uncovered_count,\n    percent, isError\n  } = props;\n\n  let {\n    disableLink, threshold\n  } = props;\n\n  disableLink = props.disableLink;\n  threshold = props.threshold || 80;\n\n  let className = percent >= threshold ? 'positive' : 'negative';\n\n  let errorPopup;\n\n  if (isError) {\n    className = 'error';\n    let errorType;\n    let errorContent;\n\n    if (props.flowCoverageError) {\n      errorType = 'flow coverage';\n      errorContent = <pre>{props.flowCoverageError}</pre>;\n    }\n\n    if (props.flowCoverageParsingError) {\n      errorType = 'JSON Parsing';\n      errorContent = <pre>{props.flowCoverageParsingError}</pre>;\n    }\n\n    if (props.flowCoverageException) {\n      errorType = 'Flow command unexpected error';\n      errorContent = <pre>{props.flowCoverageException}</pre>;\n    }\n\n    if (props.flowCoverageStderr) {\n      errorType = 'Flow command stderr';\n      errorContent = <pre>{props.flowCoverageStderr}</pre>;\n    }\n\n    errorPopup = (\n      <div className=\"ui popup\">\n        <div className=\"header\">Flow Error: {errorType}</div>\n        <div>{errorContent}</div>\n      </div>\n    );\n  }\n\n  return (\n    <tr key={filename} className={className}>\n      <td key=\"filename\" className={disableLink ? '' : 'selectable'}>\n        {disableLink ? filename : <LinkToSourceFileReport targetFilename={filename}/>}\n      </td>\n      <td key=\"percent\" className={isError && 'error'}>\n        {\n          isError ?\n            <span>\n              <i className=\"attention icon\" data-position=\"bottom right\"/>\n              Error\n              {errorPopup}\n            </span> :\n            <span>{percent} %</span>\n        }\n      </td>\n      <td key=\"total\"> {covered_count + uncovered_count} </td>\n      <td key=\"covered\"> {covered_count} </td>\n      <td key=\"uncovered\"> {uncovered_count} </td>\n    </tr>\n  );\n  /* eslint-enable camelcase */\n};\n"]}