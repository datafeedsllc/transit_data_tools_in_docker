{"version":3,"sources":["../../src/lib/report-html.js"],"names":["path","require","react","mkdirp","readFile","writeFile","FlowCoverageHTMLReport","baseSemanticAssets","assetsList","concat","map","el","join","apply","copyAsset","outputDir","assetName","srcfileReady","__dirname","createDestDir","dirname","destFileWritten","data","Promise","all","then","res","srcFileData","copyAssets","bind","renderHTMLReport","opt","filename","indexOf","reject","Error","projectDir","relativeToFilename","prefixDir","dest","relative","prefixAssets","filePath","summaryReportContent","resolve","reportFilePath","reportFileContent","toRelative","renderToStaticMarkup","htmlTemplateOptions","reportType","type","coverageGeneratedAt","coverageSummaryData","assets","css","js","sourceReportContent","srcPath","dirName","buff","coverageData","fileName","fileContent","summaryRelLink","waitForReportContent","Buffer","generateFlowCoverageReportHTML","opts","generatedAt","generateSummary","waitForCopyAssets","generateSourceFiles","Object","keys","files","module","exports","render","generate"],"mappings":"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","file":"report-html.js","sourcesContent":["'use strict';\n\n// @flow\n\nimport type {FlowCoverageSummaryData} from './flow';\nimport type {FlowCoverageReportOptions} from './index';\n\nvar path = require('path');\nvar react = require('react-dom/server');\nvar mkdirp = require('./promisified').mkdirp;\nvar readFile = require('./promisified').readFile;\nvar writeFile = require('./promisified').writeFile;\n\nvar FlowCoverageHTMLReport = require('./components/html-report-page');\n\nvar baseSemanticAssets = ['themes', 'default', 'assets'];\nvar assetsList = [\n  'jquery-3.1.0.min.js',\n  'semantic.min.js',\n  'semantic.min.css',\n  'semantic-tablesort.js',\n  'index.js',\n  'codemirror.js',\n  'codemirror.css',\n  'codemirror-javascript-mode.js',\n  'codemirror-annotatescrollbar-addon.js',\n  'codemirror-simplescrollbars-addon.js',\n  'codemirror-simplescrollbars-addon.css',\n  'flow-highlight-source.js',\n  'flow-highlight-source.css',\n  'flow-coverage-report.css'\n].concat(\n[\n    ['images', 'flags.png'],\n    ['fonts', 'icons.eot'],\n    ['fonts', 'icons.otf'],\n    ['fonts', 'icons.svg'],\n    ['fonts', 'icons.ttf'],\n    ['fonts', 'icons.woff'],\n    ['fonts', 'icons.woff2']\n].map(function (el) {\n  return path.join.apply(null, baseSemanticAssets.concat(el));\n})\n);\n\nfunction copyAsset(outputDir, assetName) {\n  var srcfileReady = readFile(path.join(__dirname, '..', '..', 'assets', assetName));\n  var createDestDir = mkdirp(path.join(outputDir, 'assets', path.dirname(assetName)));\n\n  function destFileWritten(data) {\n    return writeFile(path.join(outputDir, 'assets', assetName), data);\n  }\n\n  return Promise.all([\n    srcfileReady, createDestDir\n  ]).then(function (res) {\n    var srcFileData = res[0];\n\n    return destFileWritten(srcFileData);\n  });\n}\n\nfunction copyAssets(outputDir/* : string */) {\n  return Promise.all(assetsList.map(copyAsset.bind(null, outputDir)));\n}\n\nfunction renderHTMLReport(opt/* : Object */) {\n  if (opt.filename &&\n      opt.filename.indexOf('..') >= 0) {\n    return Promise.reject(new Error(\n      'filename is not relative to the projectDir: ' +\n        [opt.projectDir, opt.filename].join(' - ')\n    ));\n  }\n\n  function relativeToFilename(prefixDir, dest) {\n    return path.relative(path.join(prefixDir, path.dirname(opt.filename || '')), dest);\n  }\n\n  function prefixAssets(filePath) {\n    return path.join('assets', filePath);\n  }\n\n  function summaryReportContent() {\n    return new Promise(function (resolve) {\n      var reportFilePath;\n      var reportFileContent;\n      var toRelative = relativeToFilename.bind(null, '');\n\n      reportFilePath = path.join(opt.outputDir, 'index.html');\n\n      reportFileContent = '<!DOCTYPE html>\\n' +\n        // $FLOW_FIXME: incompatible type with React$Element\n        react.renderToStaticMarkup(new FlowCoverageHTMLReport({\n          htmlTemplateOptions: opt.htmlTemplateOptions,\n          reportType: opt.type,\n          coverageGeneratedAt: opt.coverageGeneratedAt,\n          coverageSummaryData: opt.data,\n          assets: {\n            css: [\n              'semantic.min.css',\n              'flow-coverage-report.css'\n            ].map(prefixAssets).map(toRelative),\n            js: [\n              'jquery-3.1.0.min.js',\n              'semantic.min.js',\n              'semantic-tablesort.js',\n              'index.js'\n            ].map(prefixAssets).map(toRelative)\n          }\n        }));\n\n      resolve({\n        reportFilePath: reportFilePath,\n        reportFileContent: reportFileContent\n      });\n    });\n  }\n\n  function sourceReportContent() {\n    return new Promise(function (resolve, reject) {\n      var srcPath = path.join(opt.projectDir, opt.filename);\n      var dirName = path.dirname(opt.filename);\n      var toRelative = relativeToFilename.bind(null, 'sourcefiles');\n\n      return mkdirp(path.join(opt.outputDir, 'sourcefiles', dirName)).then(function () {\n        return readFile(srcPath).then(function (buff) {\n          var reportFileContent = '<!DOCTYPE html>\\n' +\n                // $FLOW_FIXME: incompatible type with React$Element\n                react.renderToStaticMarkup(new FlowCoverageHTMLReport({\n                  htmlTemplateOptions: opt.htmlTemplateOptions,\n                  reportType: opt.type,\n                  coverageGeneratedAt: opt.coverageGeneratedAt,\n                  coverageData: opt.data,\n                  fileName: opt.filename,\n                  fileContent: buff,\n                  summaryRelLink: toRelative('index.html'),\n                  assets: {\n                    css: [\n                      'semantic.min.css',\n                      'codemirror.css',\n                      'flow-highlight-source.css',\n                      'flow-coverage-report.css',\n                      'codemirror-simplescrollbars-addon.css'\n                    ].map(prefixAssets).map(toRelative),\n                    js: [\n                      'jquery-3.1.0.min.js',\n                      'semantic.min.js',\n                      'semantic-tablesort.js',\n                      'codemirror.js',\n                      'codemirror-javascript-mode.js',\n                      'codemirror-annotatescrollbar-addon.js',\n                      'codemirror-simplescrollbars-addon.js',\n                      'flow-highlight-source.js',\n                      'index.js'\n                    ].map(prefixAssets).map(toRelative)\n                  }\n                }));\n\n          var reportFilePath = path.join(opt.outputDir, 'sourcefiles', opt.filename) + '.html';\n          resolve({\n            reportFilePath: reportFilePath,\n            reportFileContent: reportFileContent\n          });\n        }, reject);\n      }, reject);\n    });\n  }\n\n  var waitForReportContent;\n\n  if (opt.type === 'summary') {\n    waitForReportContent = summaryReportContent();\n  }\n\n  if (opt.type === 'sourcefile') {\n    waitForReportContent = sourceReportContent();\n  }\n\n  if (waitForReportContent) {\n    return waitForReportContent.then(function (res) {\n      var reportFilePath = res.reportFilePath;\n      var reportFileContent = res.reportFileContent;\n\n      return mkdirp(path.dirname(reportFilePath)).then(function () {\n        return writeFile(reportFilePath, new Buffer(reportFileContent));\n      });\n    });\n  }\n\n  return Promise.reject(new Error('Unknown report type: ' + opt.type));\n}\n\nfunction generateFlowCoverageReportHTML(\n  coverageSummaryData: FlowCoverageSummaryData,\n  opts: FlowCoverageReportOptions\n) {\n  var projectDir = opts.projectDir;\n  var outputDir = opts.outputDir;\n  var coverageGeneratedAt = coverageSummaryData.generatedAt;\n  var generateSummary = renderHTMLReport({\n    type: 'summary', filename: null,\n    htmlTemplateOptions: opts.htmlTemplateOptions,\n    coverageGeneratedAt, projectDir, data: coverageSummaryData, outputDir\n  });\n\n  if (!outputDir) {\n    throw new Error('Unexpected empty outputDir option');\n  }\n\n  var waitForCopyAssets = copyAssets(outputDir);\n  var generateSourceFiles = Object.keys(coverageSummaryData.files)\n        .map(function (filename) {\n          var data = coverageSummaryData.files[filename];\n          return renderHTMLReport({\n            type: 'sourcefile', coverageGeneratedAt,\n            htmlTemplateOptions: opts.htmlTemplateOptions,\n            projectDir, filename, data, outputDir\n          });\n        });\n  return Promise.all(\n    [\n      waitForCopyAssets,\n      generateSummary\n    ].concat(generateSourceFiles)\n  );\n}\n\nmodule.exports = {\n  assetsList: assetsList,\n  copyAssets: copyAssets,\n  render: renderHTMLReport,\n  generate: generateFlowCoverageReportHTML\n};\n"]}