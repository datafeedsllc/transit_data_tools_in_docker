{"version":3,"sources":["../../../src/test/unit/fixtures.js"],"names":["FLOW_STATUS_PASSED","passed","errors","flowVersion","now","Date","generatedAt","toDateString","toTimeString","firstGlob","secondGlob","firstGlobResults","secondGlobResults","allFiles","concat","FLOW_COVERAGE_SUMMARY_DATA","flowStatus","covered_count","uncovered_count","globIncludePatterns","files","reduce","acc","filename","percent","expressions","uncovered_locs","start","line","column","offset","end","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,qBAAqB;AACzBC,UAAQ,IADiB;AAEzBC,UAAQ,EAFiB;AAGzBC,eAAa;AAHY,CAA3B;;AAMA,IAAMC,MAAM,IAAIC,IAAJ,EAAZ;AACA,IAAMC,cAAcF,IAAIG,YAAJ,KAAqB,GAArB,GAA2BH,IAAII,YAAJ,EAA/C;;AAEA,IAAMC,YAAY,UAAlB;AACA,IAAMC,aAAa,YAAnB;AACA,IAAMC,mBAAmB,CAAC,UAAD,EAAa,UAAb,CAAzB;AACA,IAAMC,oBAAoB,CAAC,aAAD,EAAgB,aAAhB,CAA1B;;AAEA,IAAMC,WAAW,GAAGC,MAAH,CAAUH,gBAAV,EAA4BC,iBAA5B,CAAjB;;AAEA;AACA,IAAMG,6BAA6B;AACjCC,yCAAgBhB,kBAAhB,CADiC;AAEjCM,0BAFiC;AAGjCW,iBAAe,CAHkB;AAIjCC,mBAAiB,CAJgB;AAKjCC,uBAAqB,CAACV,SAAD,EAAYC,UAAZ,CALY;AAMjCU,SAAOP,SAASQ,MAAT,CAAgB,UAACC,GAAD,EAAMC,QAAN,EAAmB;AACxCD,QAAIC,QAAJ,IAAgB;AACdC,eAAS,EADK;AAEdC,mBAAa;AACXR,uBAAe,CADJ;AAEXC,yBAAiB,CAFN;AAGXQ,wBAAgB,CAAC;AACfC,iBAAO;AACLC,kBAAM,CADD;AAELC,oBAAQ,CAFH;AAGLC,oBAAQ;AAHH,WADQ;AAMfC,eAAK;AACHH,kBAAM,CADH;AAEHC,oBAAQ,CAFL;AAGHC,oBAAQ;AAHL;AANU,SAAD;AAHL;AAFC,KAAhB;AAmBA,WAAOR,GAAP;AACD,GArBM,EAqBJ,EArBI;AAN0B,CAAnC;AA6BA;;AAEAU,OAAOC,OAAP,GAAiB;AACflB,wDADe;AAEff;AAFe,CAAjB","file":"fixtures.js","sourcesContent":["const FLOW_STATUS_PASSED = {\n  passed: true,\n  errors: [],\n  flowVersion: '0.30.0'\n};\n\nconst now = new Date();\nconst generatedAt = now.toDateString() + ' ' + now.toTimeString();\n\nconst firstGlob = 'src/*.js';\nconst secondGlob = 'src/*/*.js';\nconst firstGlobResults = ['src/a.js', 'src/b.js'];\nconst secondGlobResults = ['src/d1/c.js', 'src/d1/d.js'];\n\nconst allFiles = [].concat(firstGlobResults, secondGlobResults);\n\n/* eslint-disable camelcase */\nconst FLOW_COVERAGE_SUMMARY_DATA = {\n  flowStatus: {...FLOW_STATUS_PASSED},\n  generatedAt,\n  covered_count: 4,\n  uncovered_count: 4,\n  globIncludePatterns: [firstGlob, secondGlob],\n  files: allFiles.reduce((acc, filename) => {\n    acc[filename] = {\n      percent: 50,\n      expressions: {\n        covered_count: 1,\n        uncovered_count: 1,\n        uncovered_locs: [{\n          start: {\n            line: 1,\n            column: 1,\n            offset: 10\n          },\n          end: {\n            line: 2,\n            column: 2,\n            offset: 30\n          }\n        }]\n      }\n    };\n    return acc;\n  }, {})\n};\n/* eslint-enable camelcase */\n\nmodule.exports = {\n  FLOW_COVERAGE_SUMMARY_DATA,\n  FLOW_STATUS_PASSED\n};\n"]}