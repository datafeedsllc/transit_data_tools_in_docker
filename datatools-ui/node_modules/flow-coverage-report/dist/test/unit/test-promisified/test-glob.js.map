{"version":3,"sources":["../../../../src/test/unit/test-promisified/test-glob.js"],"names":["LIB_PROMISIFIED","afterEach","stopAll","t","glob","stub","fakeGlobResult","onFirstCall","callsArgWith","Error","onSecondCall","promisified","reRequire","throws","true","calledOnce","notThrows","fakeOption","files","Array","isArray","deepEqual","calledTwice","is","secondCall","args"],"mappings":";AAAA;;;;;;;;;;AAEA;;;;AACA;;;;AAEA;;;;AAEA,IAAMA,kBAAkB,0BAAxB;;AAEA,UAAKC,SAAL,CAAe,YAAM;AACnB,wBAAYC,OAAZ;AACD,CAFD;;AAIA,eAAK,kBAAL;AAAA,wEAAyB,kBAAgBC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,gBADiB,GACV,gBAAMC,IAAN,EADU;;AAEvB,uCAAY,MAAZ,EAAoBD,IAApB;;AAEME,0BAJiB,GAIA,CACrB,gBADqB,EAErB,qBAFqB,CAJA;;;AASvBF,iBAAKG,WAAL,GAAmBC,YAAnB,CAAgC,CAAhC,EAAmC,IAAIC,KAAJ,CAAU,iBAAV,CAAnC,EACKC,YADL,GACoBF,YADpB,CACiC,CADjC,EACoC,IADpC,EAC0CF,cAD1C;;AAGMK,uBAZiB,GAYH,sBAAYC,SAAZ,CAAsBZ,eAAtB,CAZG;AAAA;AAAA,mBAcjBG,EAAEU,MAAF,CAASF,YAAYP,IAAZ,CAAiB,SAAjB,EAA4B,EAA5B,CAAT,EAA0C,iBAA1C,CAdiB;;AAAA;AAevBD,cAAEW,IAAF,CAAOV,KAAKW,UAAZ;;AAfuB;AAAA,mBAiBjBZ,EAAEa,SAAF,4DAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACIL,YAAYP,IAAZ,CAAiB,UAAjB,EAA6B,EAACa,YAAY,IAAb,EAA7B,CADJ;;AAAA;AACVC,2BADU;;AAEhBf,wBAAEW,IAAF,CAAOK,MAAMC,OAAN,CAAcF,KAAd,CAAP;AACAf,wBAAEkB,SAAF,CAAYH,KAAZ,EAAmBZ,cAAnB;;AAHgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAZ,GAjBiB;;AAAA;;AAuBvBH,cAAEW,IAAF,CAAOV,KAAKkB,WAAZ;AACAnB,cAAEoB,EAAF,CAAKnB,KAAKoB,UAAL,CAAgBC,IAAhB,CAAqB,CAArB,CAAL,EAA8B,UAA9B;AACAtB,cAAEkB,SAAF,CAAYjB,KAAKoB,UAAL,CAAgBC,IAAhB,CAAqB,CAArB,CAAZ,EAAqC,EAACR,YAAY,IAAb,EAArC;;AAzBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA","file":"test-glob.js","sourcesContent":["'use babel';\n\nimport mockRequire from 'mock-require';\nimport sinon from 'sinon';\n\nimport {test} from 'ava';\n\nconst LIB_PROMISIFIED = '../../../lib/promisified';\n\ntest.afterEach(() => {\n  mockRequire.stopAll();\n});\n\ntest('promisified glob', async function (t) {\n  const glob = sinon.stub();\n  mockRequire('glob', glob);\n\n  const fakeGlobResult = [\n    'dir1/file1.txt',\n    'dir1/dir2/file2.txt'\n  ];\n\n  glob.onFirstCall().callsArgWith(2, new Error('Fake glob error'))\n      .onSecondCall().callsArgWith(2, null, fakeGlobResult);\n\n  const promisified = mockRequire.reRequire(LIB_PROMISIFIED);\n\n  await t.throws(promisified.glob('**/*.js', {}), 'Fake glob error');\n  t.true(glob.calledOnce);\n\n  await t.notThrows(async function () {\n    const files = await promisified.glob('**/*.txt', {fakeOption: true});\n    t.true(Array.isArray(files));\n    t.deepEqual(files, fakeGlobResult);\n  });\n\n  t.true(glob.calledTwice);\n  t.is(glob.secondCall.args[0], '**/*.txt');\n  t.deepEqual(glob.secondCall.args[1], {fakeOption: true});\n});\n"]}