'use strict';
'use babel';

/* eslint-disable react/jsx-filename-extension */

var _ava = require('ava');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _common = require('./common');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var REACT_COMPONENT = _common.BASE_DIR + '/coverage-file-table-head';

(0, _ava.test)('<FlowCoverageFileTableHead />', function (t) {
  var FlowCoverageFileTableHead = require(REACT_COMPONENT);
  var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(FlowCoverageFileTableHead, null));

  var expectedKeys = ['filename', 'percent', 'total', 'covered', 'uncovered'];

  t.is(wrapper.find('thead').length, 1);
  t.is(wrapper.find('tr').length, 1);
  t.is(wrapper.find('th').length, expectedKeys.length);

  var shallowWrapper = (0, _enzyme.shallow)(_react2.default.createElement(FlowCoverageFileTableHead, null));

  var i = 0;
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = expectedKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var expectedKey = _step.value;

      t.is(shallowWrapper.find('th').at(i).key(), expectedKey);
      i++;
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
});

_ava.test.todo('<FlowCoverageFileTableHead /> with missing props');
//# sourceMappingURL=test-coverage-file-table-head.js.map