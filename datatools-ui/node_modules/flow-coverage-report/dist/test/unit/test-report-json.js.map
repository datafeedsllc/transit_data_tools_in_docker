{"version":3,"sources":["../../../src/test/unit/test-report-json.js"],"names":["LIB_REPORT_JSON","LIB_PROMISIFIED","afterEach","stopAll","t","mkdirp","stub","writeFile","reportJSON","reRequire","returns","Promise","resolve","fakeData","fakeCoverageSummaryData","options","projectDir","globIncludePatterns","generate","true","calledOnce","todo"],"mappings":";AAAA;;;;;;;;;;AAEA;;;;AACA;;;;AAEA;;;;AAEA,IAAMA,kBAAkB,uBAAxB;AACA,IAAMC,kBAAkB,uBAAxB;;AAEA,UAAKC,SAAL,CAAe,YAAM;AACnB,wBAAYC,OAAZ;AACD,CAFD;;AAIA,eAAK,sBAAL;AAAA,wEAA6B,iBAAeC,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,kBADqB,GACZ,gBAAMC,IAAN,EADY;AAErBC,qBAFqB,GAET,gBAAMD,IAAN,EAFS;;;AAI3B,uCAAYL,eAAZ,EAA6B,EAACI,cAAD,EAASE,oBAAT,EAA7B;;AAEMC,sBANqB,GAMR,sBAAYC,SAAZ,CAAsBT,eAAtB,CANQ;;;AAQ3BK,mBAAOK,OAAP,CAAeC,QAAQC,OAAR,EAAf;AACAL,sBAAUG,OAAV,CAAkBC,QAAQC,OAAR,EAAlB;;AAEMC,oBAXqB,GAWV,EAACC,yBAAyB,IAA1B,EAXU;AAYrBC,mBAZqB,GAYX;AACdC,0BAAY,aADE;AAEdC,mCAAqB,CAAC,UAAD;AAFP,aAZW;AAAA;AAAA,mBAiBrBT,WAAWU,QAAX,CAAoBL,QAApB,EAA8BE,OAA9B,CAjBqB;;AAAA;;AAmB3BX,cAAEe,IAAF,CAAOd,OAAOe,UAAd;AACAhB,cAAEe,IAAF,CAAOZ,UAAUa,UAAjB;;AApB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;;AAuBA,UAAKC,IAAL,CAAU,+BAAV","file":"test-report-json.js","sourcesContent":["'use babel';\n\nimport mockRequire from 'mock-require';\nimport sinon from 'sinon';\n\nimport {test} from 'ava';\n\nconst LIB_REPORT_JSON = '../../lib/report-json';\nconst LIB_PROMISIFIED = '../../lib/promisified';\n\ntest.afterEach(() => {\n  mockRequire.stopAll();\n});\n\ntest('generate JSON report', async function(t) {\n  const mkdirp = sinon.stub();\n  const writeFile = sinon.stub();\n\n  mockRequire(LIB_PROMISIFIED, {mkdirp, writeFile});\n\n  const reportJSON = mockRequire.reRequire(LIB_REPORT_JSON);\n\n  mkdirp.returns(Promise.resolve());\n  writeFile.returns(Promise.resolve());\n\n  const fakeData = {fakeCoverageSummaryData: true};\n  const options = {\n    projectDir: '/projectDir',\n    globIncludePatterns: ['src/*.js']\n  };\n\n  await reportJSON.generate(fakeData, options);\n\n  t.true(mkdirp.calledOnce);\n  t.true(writeFile.calledOnce);\n});\n\ntest.todo('generate JSON report failures');\n"]}