'use strict';

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FLOW_STATUS_PASSED = {
  passed: true,
  errors: [],
  flowVersion: '0.30.0'
};

var now = new Date();
var generatedAt = now.toDateString() + ' ' + now.toTimeString();

var firstGlob = 'src/*.js';
var secondGlob = 'src/*/*.js';
var firstGlobResults = ['src/a.js', 'src/b.js'];
var secondGlobResults = ['src/d1/c.js', 'src/d1/d.js'];

var allFiles = [].concat(firstGlobResults, secondGlobResults);

/* eslint-disable camelcase */
var FLOW_COVERAGE_SUMMARY_DATA = {
  flowStatus: (0, _extends3.default)({}, FLOW_STATUS_PASSED),
  generatedAt: generatedAt,
  covered_count: 4,
  uncovered_count: 4,
  globIncludePatterns: [firstGlob, secondGlob],
  files: allFiles.reduce(function (acc, filename) {
    acc[filename] = {
      percent: 50,
      expressions: {
        covered_count: 1,
        uncovered_count: 1,
        uncovered_locs: [{
          start: {
            line: 1,
            column: 1,
            offset: 10
          },
          end: {
            line: 2,
            column: 2,
            offset: 30
          }
        }]
      }
    };
    return acc;
  }, {})
};
/* eslint-enable camelcase */

module.exports = {
  FLOW_COVERAGE_SUMMARY_DATA: FLOW_COVERAGE_SUMMARY_DATA,
  FLOW_STATUS_PASSED: FLOW_STATUS_PASSED
};
//# sourceMappingURL=fixtures.js.map